<?xml version="1.0" encoding="utf-8" ?>
<rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:wfw="http://wellformedweb.org/CommentAPI/" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>she blogs</title>
    <atom:link href="http://now.she.codes/blog/feed.xml" rel="self" type="application/rss+xml"></atom:link>
    <link>http://now.she.codes/blog</link>
    <description>she.codes' official blog</description>
    <pubDate>Tue, 22 Jul 2014 02:00:00 +0200</pubDate>
    <generator>Wintersmith - https://github.com/jnordberg/wintersmith</generator>
    <language>en</language>
    <item>
      <title>A Package Manager For The Brain</title>
      <link>http://now.she.codes/blog/articles/learning-db/</link>
      <pubDate>Tue, 22 Jul 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://now.she.codes/blog/articles/learning-db/</guid>
      <author></author>
      <description>&lt;p&gt;Our mission is to teach programming to women of all backgrounds, incuding those with little or no prior exposure to the field of software development and the inner workings of operating systems or hardware.&lt;/p&gt;
&lt;p&gt;The Internet offers a rich variety of learning resources like screencasts, blog articles, recordings of conference talks and  educational games. Universities started to open up their educational resources to the public, the idea of open licenses is spreading from software to the educational sector.&lt;/p&gt;
&lt;p&gt;It was never easier to teach yourself how to program, and it never made more sense economically, the software idustry is getting more and more desperate for new talents and has a lot to offer to those who own the right set of skills. There’s just one problem.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;There is no lack of resources, all the knowledge is out there, ready to be consumed, but finding the right ones, the ones produced by talented didacts can be a frustrating task. And even with a curated list of the best resources, finding those that do not require too much prior knowledge, yet do not presume too little, is hard and time-consuming.&lt;/p&gt;
&lt;p&gt;Students need a guide that points them to the resources that are the most relevant to them individually, taking into account what they already know and what knowledge they need to acquire to get to the next level.&lt;/p&gt;
&lt;p&gt;Curating is part of the solution, but we need more.&lt;/p&gt;
&lt;p&gt;In order to have a fun and successful learning experience, a student has to have some knowledge prior to consuming a certain piece of information. She has to be familiar with certain terms and concepts that are provided by other resources, which therefore should be consumed first. In Computer Science such a structure of things that depend on each other is called a &lt;em&gt;dependency graph&lt;/em&gt;. Unfortunately, videos on youtube and tutorials on blogs typically describe these requirements in very broad terms, like ‘for beginners’ or ‘for an advanced audience’, but the problem is much more complicated, the dependencies are fine grained, and given that little information, we inadvertently end up consuming material that we are not ready for, which is not the most efficient use of our time.&lt;/p&gt;
&lt;p&gt;The good news is: A very similar problem already has been solved. If you think about it, installing new software onto a computer system has a lot in common with a human learning about new concepts. There are prerequisites in both cases, conditions that must be met in order to add new stuff on top.&lt;/p&gt;
&lt;p&gt; If you install an email server onto a Unix system for example, that piece of software provides something to the computer as a whole (the ability to send and receive emails), but in order to be installed, it needs some other pieces of software to be installed first. These dependencies for example are software libraries that do network communications and handle cryptography or various character encodings. All of these libraries must pre-exist in order for the system to be able to accept the new piece, much like a human that needs to know about the latin alphabet as well as arabic numbers and some basic math in order to understand hexadecimal notation.&lt;/p&gt;
&lt;p&gt;In the world of computer systems, this problem is solved by packaging software with information needed to successfully install it onto a system. That information, the &lt;em&gt;meta data&lt;/em&gt;, is not part of the software itself, instead it talks about it, it describes what the software adds to the system and what the software expects the system to provide prior to being installed (certain software libraries). These libraries in turn themselves are packaged up with their meta data and declare what they need. It is not uncommon to have very deeply nested dependency graphs that involve hundreds of packages.&lt;/p&gt;
&lt;p&gt;Figuring out in what order to install all these packages is a complicated problem, but it is the kind of problem that computers are very good at. A &lt;em&gt;package manager&lt;/em&gt; is the tool that resolves all these dependencies and that finally comes up with a plan to add the desired ability to the system by figuring out exactly where to download every bit and piece and by determining the exact order to put them on the system so that in the end, no dependency remains unresolved.&lt;/p&gt;
&lt;p&gt;It is not hard to replace ‘computer’ by ‘human’ and ‘software package’ by ‘education resource’. It is funny that we humans came up with a sophisticated way to add new abilities to machines, yet when it comes to do the same for ourselves, we pretty much do the same as a thousand years ago. Let’s fix that!&lt;/p&gt;
&lt;p&gt;A couple of days ago on the Open Knowledge Festival 2014 in Berlin, I was lucky enough to run into &lt;a href=&quot;http://boazsender.com/&quot;&gt;Boaz Sender&lt;/a&gt;, CEO of Bocoup, a company with the mission “to move the Open Web forward through education”. Like us, they are thinking about a common format for Open Education Resources (OER) and have a strong focus on modern web technologies. A shared, open data format for learning resources would enable us to add the missing meta data to existing resources, turn unstructured learning material into well-defined educational packages that declare their dependencies and announce what they provide in machine-readable form. With this meta-data stored in an open database, maintained by the community, we would be able to implement &lt;em&gt;the package manager for the brain&lt;/em&gt;, a tool that not only can assemble reading lists that take a student from her individual learning stage to whereever she wants to go, choosing the most efficient path for her, it also will be able to predict frustration points in manually assembled curricula, it will find gaps, concepts that are used that never were introduced, it will serve as a debugging tool for learning programs.&lt;/p&gt;
&lt;p&gt;We figured out an efficient way to teach our machines new tricks decades ago. Now it is time to make these ideas accessible for education to help humans to navigate the vast universe of free and open education resources and learn more effectively.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>she.coders get exclusive tickets for JSConfEU 2014!</title>
      <link>http://now.she.codes/blog/articles/jsconfeu2014/</link>
      <pubDate>Thu, 03 Jul 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://now.she.codes/blog/articles/jsconfeu2014/</guid>
      <author></author>
      <description>&lt;p&gt;JavaScript is an extremely versatile language, and it is our language of choice when it comes to teaching programming. Europe’s JavaScript enthusiasts meet each year at JSConfEU in Berlin. It is the &lt;a href=&quot;http://2014.jsconf.eu/why/&quot;&gt;best event on the continent&lt;/a&gt; to learn about new developments and to celebrate  great parties with the community.&lt;/p&gt;
&lt;p&gt;JSConfEU’s organizers have always been very committed to working towards better gender parity among speakers at their events. Due to its vast popularity, conference tickets are being sold out within minutes after releasing a new block. This unfortunately works against diversity among attendees. &lt;/p&gt;
&lt;p&gt;This year, the organisers of JSConfEU are working even harder to promote diversity in technology, and they have extended a special invitation to she.codes to help with making more tickets available to women by assigning us an exclusive block of tickets!
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;While the tickets are the standard price, she.codes subscribers will get first dibs before they are released back to the general public. &lt;/p&gt;
&lt;p&gt;At 16:00 (GMT) on Monday 7th June, she.codes will make this block available to members of our mailing list, giving subscribers the opportunity to attend Europe’s premier JavaScript conference. If you haven’t already signed up to the mailing list, you can do so &lt;a href=&quot;http://she.codes/#makeithappen-a&quot;&gt;here&lt;/a&gt;. And even if you can’t attend the conference, by signing up for our mailing list, you will receive the latest updates on developments at she.codes! &lt;/p&gt;
&lt;p&gt;We hope that through this partnership with JSConfEU, we can help achieve a wider, more diverse audience in September!&lt;/p&gt;
</description>
    </item>
    <item>
      <title>On École 42, Teacherless Teaching and Elitism</title>
      <link>http://now.she.codes/blog/articles/ecole-42/</link>
      <pubDate>Fri, 27 Jun 2014 02:00:00 +0200</pubDate>
      <guid isPermaLink="true">http://now.she.codes/blog/articles/ecole-42/</guid>
      <author></author>
      <description>&lt;p&gt;&lt;a href=&quot;https://twitter.com/kathrinpassig&quot;&gt;Kathrin Passig&lt;/a&gt; pointed me to an interesting &lt;a href=&quot;http://venturebeat.com/2014/06/13/this-french-tech-school-has-no-teachers-no-books-no-tuition-and-it-could-change-everything/&quot;&gt;article about École 42&lt;/a&gt;. It may be a bit silly to compare this 70-million-euro venture to our teeny weeny organisation, but I like to do silly things at times. There are a lot of similarities between their approach and what we plan to do at &lt;a href=&quot;http://she.codes/&quot;&gt;she.codes&lt;/a&gt;, and one key difference.
&lt;span class=&quot;more&quot;&gt;&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;First the similarities: There are no teachers. Instead of transferring knowledge from one person to a group of pupils, the students use the Internet and their peers. Knowledge flows in all directions. Groups of students work on projects together and gather hands-on experience in what it is like to deliver a product. Both approaches emphasise collaboration and peer support. We share the funding model too: both schools count on donations as a primary source of funding, and both schools are free for students initially.&lt;/p&gt;
&lt;p&gt;While École 42 can afford to have no business model at all (their founder is incredibly rich), we’ll probably need additional ways of generating income (other than donations)  to keep the servers running. At the same time, we are dedicated to keeping the barrier to entrance as low as possible. Our entry-level courses will therefore always be free, and they will take students to a level where they are able to earn money with the skills they acquired. We will then offer advanced courses for a small fee to get them into higher income levels. That way, we hope, our income will be roughly proportional to our costs.&lt;/p&gt;
&lt;p&gt;There is another, more important, difference - École 42 is located in a physical building in Paris, their students are being equipped with hardware, and they live and learn on campus. Therefore, the number of students they can accept is limited. Because of the huge demand, École 42’s acceptance rate is even lower than those of elite universities like Harvard or Stanford, and applicants have to pass hardcore tests in order to be accepted. As a consequence, only students that already have a strong backround in computing make it into École 42.&lt;/p&gt;
&lt;p&gt;At she.codes however, our mission is to bring as many women into the software industry as we can, including those with little or no prior exposure to programming. Because we do not have physical restrictions, we will be able to accept any number of students.&lt;/p&gt;
&lt;p&gt;A virtual learning environment cannot deliver the ‘human touch’ of sharing a physical space with all the other students, but it has unique advantages as well. Our platform’s matchmaking feature selects students with similar skill levels for a remote pair programming session. The flow of knowledge between two persons is more effective when they are not intimidated by the other one’s superiority. The result of this collaboration is then reviewed by more experienced students who have a broader understanding and the original team can take their project to the next level.&lt;/p&gt;
&lt;p&gt;The larger the pool of students is, the better this will work. While École 42 has to set hard limits on how many students they can accept, and thusly has to filter out all but the most experiened and talented appicants, the she.codes’ community benefits from each and every new student. Only through this can we stay true to our mission.&lt;/p&gt;
&lt;p&gt;Nicolas Sadirac, École 42’s director, mentions that prestigious universities have already expressed interest in the school’s approach, but what will universities provide if students take their knowledge from the Internet, work on their own project ideas, and learn from each other rather than from teachers? I can’t think of much more than the classroom.&lt;/p&gt;
&lt;p&gt;Many of today’s most successful software developers are self-taught and do not have academic degrees. Universities struggle to deliver what the industry demands for quite a while now. Technology and methodology change too fast - we cannot expect teachers that ended their education decades ago to successfully deliver to students what is relevant to the software industry today. We need peer-to-peer learning and we need models that scale and that are inclusive instead of elitist.&lt;/p&gt;
&lt;p&gt;And classrooms? We can do without them.&lt;/p&gt;
</description>
    </item>
  </channel>
</rss>